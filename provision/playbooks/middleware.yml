---
- hosts: all
  vars:
    user: "{{ ansible_env.USER | default( 'ubuntu' ) }}"

  tasks:

    - name: Allow remote connections to MySQL
      become: yes
      lineinfile:
        dest: "/etc/mysql/mysql.conf.d/mysqld.cnf"
        backrefs: yes
        regexp: '^(bind-address)'
        line: '# \1'
      notify:
        - restart mysql

    - name: Place ~/.my.cnf
      become: no
      template:
        src: templates/.my.cnf
        dest: "{{ ansible_env.HOME }}/.my.cnf"

    - name: Create SSL dir
      become: yes
      file:
        path: /etc/apache2/ssl
        state: directory

    # Create key
    - name: Create key
      become: yes
      command: openssl genpkey \
        -algorithm RSA \
        -pkeyopt rsa_keygen_bits:2048 \
        -pkeyopt rsa_keygen_pubexp:65537 \
        -out /etc/apache2/ssl/{{ vccw.hostname }}.key

    # Create Certificate Sign request
    - name: Generate an OpenSSL Certificate Signing Request with Subject information
      become: yes
      shell: openssl req -new -key /etc/apache2/ssl/{{ vccw.hostname }}.key -out /etc/apache2/ssl/{{ vccw.hostname }}.csr -days 36500 -subj "/C=DE/ST=Berlin/L=Berlin/O=coderman/OU=IT/CN=vccw.test/emailAddress=admin@coderman.codes"

    # Setup CA certificate
    - name: Setup CA certificate
      become: yes
      template:
        src: templates/cacert.pem
        dest: /home/vagrant/cacert.pem
        mode: 0775

    # Setup CA key
    - name: Setup CA key
      become: yes
      template:
        src: templates/cakey.pem
        dest: /home/vagrant/cakey.pem
        mode: 0775

    # Setup environment for CA
    - name: Create config for CA
      template:
        src: templates/openssl.cnf
        dest: /home/vagrant/openssl.cnf
        mode: 0775
    - name: Create CA folders
      file:
        path: "{{ item }}"
        state: directory
        owner: vagrant
        group: vagrant
        mode: 0775
      loop:
        - /home/vagrant/certs
        - /home/vagrant/crl
        - /home/vagrant/newcerts
        - /home/vagrant/private
    - name: Create CA files
      file:
        path: /home/vagrant/index.txt
        state: touch
        mode: u=rw,g=r,o=r
    - name: Write to serial file
      become: yes
      template:
        src: templates/serial
        dest: /home/vagrant/serial
        mode: 0775

    # Sign the certificates using the self CA
    - name: Sign the server certificates
      become: yes
      command: openssl ca -batch -updatedb \
        -days 36500 \
        -config /home/vagrant/openssl.cnf \
        -cert /home/vagrant/cacert.pem \
        -keyfile /home/vagrant/cakey.pem \
        -in /etc/apache2/ssl/{{ vccw.hostname }}.csr \
        -out /etc/apache2/ssl/{{ vccw.hostname }}.crt

    # Configure mutex for apache
    - name: Create mutex config file (apache)
      become: yes
      template:
        src: templates/mutex-file.conf
        dest: /etc/apache2/conf-available/mutex-file.conf
    - name: Enable mutex configuration
      become: yes
      shell: a2enconf mutex-file.conf
    # Restart apache
    - name: Reload apache settings
      become: yes
      shell: systemctl reload apache2

    - name: Restart apache
      become: yes
      service: name=apache2 state=restarted


    - name: "Replacing the Apache User"
      become: yes
      replace:
        dest: /etc/apache2/envvars
        regexp: APACHE_RUN_USER=.*
        replace: "APACHE_RUN_USER={{ user }}"
      notify:
        - restart apache

    - name: "Replacing the Apache Group"
      become: yes
      replace:
        dest: /etc/apache2/envvars
        regexp: APACHE_RUN_GROUP=.*
        replace: "APACHE_RUN_GROUP={{ user }}"
      notify:
        - restart apache

    # Setup Document Root
    - name: Place /etc/apache2/sites-available/site.conf
      become: yes
      template:
        src: templates/site.conf
        dest: /etc/apache2/sites-available/000-default.conf
      notify:
        - restart apache

    - name: "Disable keepalive"
      become: yes
      replace:
        dest: /etc/apache2/apache2.conf
        regexp: KeepAlive .*
        replace: "KeepAlive Off"
      notify:
        - restart apache

    - name: "Setup timeout"
      become: yes
      replace:
        dest: /etc/apache2/apache2.conf
        regexp: Timeout .*
        replace: "Timeout 10"
      notify:
        - restart apache

    # enable wordpress.conf
    - name: Enable virtual host for WordPress
      become: yes
      command: a2ensite 000-default

    # php config.
    - name: Update php.ini
      become: yes
      lineinfile:
        dest: /etc/php/7.4/apache2/conf.d/99-vccw.ini
        create: yes
        line: "{{ item.key }} = {{ item.value }}"
      with_dict: "{{ vccw.php_ini }}"
      notify:
        - restart apache

    - name: Update php.ini for cli
      become: yes
      lineinfile:
        dest: /etc/php/7.4/cli/conf.d/99-vccw.ini
        create: yes
        line: "{{ item.key }} = {{ item.value }}"
      with_dict: "{{ vccw.php_ini }}"

    # Install mailcatcher as root
    - name: Install mailcatcher
      become: yes
      gem:
        name: mailcatcher
        state: latest
        user_install: no
      when: vccw.mailcatcher
    - name: Add mailcatcher to service
      become: yes
      template:
        src: templates/mailcatcher.service
        dest: /etc/systemd/system/mailcatcher.service
        mode: 0644
      when: vccw.mailcatcher
    - name: Start mailcatcher
      become: yes
      service: name=mailcatcher enabled=yes state=started
      when: vccw.mailcatcher
    - name: Update php.ini for mailcatcher
      become: yes
      lineinfile:
        dest: /etc/php/7.4/apache2/conf.d/99-vccw.ini
        create: yes
        line: "sendmail_path = /usr/bin/env catchmail"
      when: vccw.mailcatcher
      notify:
        - restart apache
    - name: Update php.ini for mailcatcher for cli
      become: yes
      lineinfile:
        dest: /etc/php/7.4/cli/conf.d/99-vccw.ini
        create: yes
        line: "sendmail_path = /usr/bin/env catchmail"
      when: vccw.mailcatcher

  handlers:
    - name: restart apache
      become: yes
      service: name=apache2 state=restarted
    - name: restart mysql
      become: yes
      service: name=mysql state=restarted
